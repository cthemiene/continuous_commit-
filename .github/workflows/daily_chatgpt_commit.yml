name: Daily ChatGPT Commit

on:
  schedule:
    - cron: '0 9 * * *'  # Runs every day at 9 AM UTC
  workflow_dispatch:

jobs:
  daily_commit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install openai

      - name: Generate commit message
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python -c "
import openai
import os
from datetime import datetime

openai.api_key = os.getenv('OPENAI_API_KEY')

prompt = '''
You are generating daily commit messages for a mobile app project.
The app uses webcam footage to detect parking occupancy and predict optimal visit times.
Create a concise, professional commit message describing today's progress, such as UI updates, webcam integration enhancements, predictive model improvements, or general app optimizations.
'''

response = openai.ChatCompletion.create(
    model='gpt-4.5-preview',
    messages=[{'role':'system', 'content':prompt}]
)

commit_message = response.choices[0].message.content.strip()

with open('daily_log.txt', 'a') as f:
    f.write(f'{datetime.utcnow().strftime('%Y-%m-%d %H:%M:%S UTC')}: {commit_message}\\n')

# Save message to environment
with open(os.environ['GITHUB_ENV'], 'a') as env_file:
    env_file.write(f'COMMIT_MESSAGE={commit_message}\\n')
"

      - name: Commit and push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add daily_log.txt
          git commit -m "${{ env.COMMIT_MESSAGE }}" || echo "No changes to commit"
          git push origin main
